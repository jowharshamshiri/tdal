{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"title": "API Configuration Schema",
	"description": "Schema for API configurations in YAML",
	"type": "object",
	"required": [
		"basePath"
	],
	"properties": {
		"basePath": {
			"type": "string",
			"description": "Base path for all API endpoints",
			"default": "/api"
		},
		"version": {
			"type": "string",
			"description": "API version",
			"default": "1.0.0"
		},
		"cors": {
			"type": "object",
			"description": "CORS configuration",
			"properties": {
				"enabled": {
					"type": "boolean",
					"default": true,
					"description": "Whether to enable CORS"
				},
				"origin": {
					"oneOf": [
						{
							"type": "string"
						},
						{
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						{
							"type": "boolean"
						}
					],
					"default": "*",
					"description": "Allowed origins"
				},
				"methods": {
					"oneOf": [
						{
							"type": "string"
						},
						{
							"type": "array",
							"items": {
								"type": "string",
								"enum": [
									"GET",
									"POST",
									"PUT",
									"DELETE",
									"PATCH",
									"OPTIONS",
									"HEAD"
								]
							}
						}
					],
					"default": [
						"GET",
						"POST",
						"PUT",
						"DELETE",
						"PATCH",
						"OPTIONS"
					],
					"description": "Allowed methods"
				},
				"allowedHeaders": {
					"oneOf": [
						{
							"type": "string"
						},
						{
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					],
					"default": [
						"Content-Type",
						"Authorization"
					],
					"description": "Allowed headers"
				},
				"exposedHeaders": {
					"oneOf": [
						{
							"type": "string"
						},
						{
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					],
					"description": "Exposed headers"
				},
				"credentials": {
					"type": "boolean",
					"default": false,
					"description": "Whether to allow credentials"
				},
				"maxAge": {
					"type": "integer",
					"description": "Max age in seconds"
				}
			}
		},
		"rateLimiting": {
			"type": "object",
			"description": "Rate limiting configuration",
			"properties": {
				"enabled": {
					"type": "boolean",
					"default": false,
					"description": "Whether to enable rate limiting"
				},
				"windowMs": {
					"type": "integer",
					"default": 60000,
					"description": "Time window in milliseconds"
				},
				"max": {
					"type": "integer",
					"default": 100,
					"description": "Maximum number of requests per window"
				},
				"message": {
					"type": "string",
					"default": "Too many requests, please try again later.",
					"description": "Rate limit error message"
				},
				"statusCode": {
					"type": "integer",
					"default": 429,
					"description": "Rate limit HTTP status code"
				},
				"skipSuccessfulRequests": {
					"type": "boolean",
					"default": false,
					"description": "Whether to skip counting successful requests"
				},
				"keyGenerator": {
					"type": "string",
					"description": "Function to generate a rate limit key (req, res) => string"
				},
				"store": {
					"type": "object",
					"description": "Custom rate limiting store configuration",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"memory",
								"redis",
								"memcached",
								"custom"
							],
							"description": "Rate limit store type"
						},
						"options": {
							"type": "object",
							"description": "Store-specific options",
							"additionalProperties": true
						}
					}
				}
			}
		},
		"compression": {
			"type": "object",
			"description": "Compression configuration",
			"properties": {
				"enabled": {
					"type": "boolean",
					"default": true,
					"description": "Whether to enable compression"
				},
				"level": {
					"type": "integer",
					"minimum": -1,
					"maximum": 9,
					"default": 6,
					"description": "Compression level (0-9, where 0 is no compression and 9 is max compression)"
				},
				"threshold": {
					"type": "integer",
					"default": 1024,
					"description": "Minimum response size in bytes to compress"
				},
				"filter": {
					"type": "string",
					"description": "Function to determine whether to compress response (req, res) => boolean"
				}
			}
		},
		"bodyParser": {
			"type": "object",
			"description": "Body parser configuration",
			"properties": {
				"json": {
					"type": "object",
					"properties": {
						"enabled": {
							"type": "boolean",
							"default": true,
							"description": "Whether to enable JSON body parsing"
						},
						"limit": {
							"type": "string",
							"default": "1mb",
							"description": "Size limit of request bodies"
						},
						"strict": {
							"type": "boolean",
							"default": true,
							"description": "Only parse objects and arrays"
						},
						"inflate": {
							"type": "boolean",
							"default": true,
							"description": "Inflate compressed bodies"
						}
					}
				},
				"urlencoded": {
					"type": "object",
					"properties": {
						"enabled": {
							"type": "boolean",
							"default": true,
							"description": "Whether to enable URL-encoded body parsing"
						},
						"limit": {
							"type": "string",
							"default": "1mb",
							"description": "Size limit of request bodies"
						},
						"extended": {
							"type": "boolean",
							"default": true,
							"description": "Whether to use the qs library for parsing URL-encoded bodies"
						},
						"parameterLimit": {
							"type": "integer",
							"default": 1000,
							"description": "Maximum number of parameters"
						}
					}
				},
				"raw": {
					"type": "object",
					"properties": {
						"enabled": {
							"type": "boolean",
							"default": false,
							"description": "Whether to enable raw body parsing"
						},
						"limit": {
							"type": "string",
							"default": "1mb",
							"description": "Size limit of request bodies"
						},
						"inflate": {
							"type": "boolean",
							"default": true,
							"description": "Inflate compressed bodies"
						},
						"type": {
							"type": "string",
							"description": "Content-Type to parse",
							"default": "application/octet-stream"
						}
					}
				},
				"text": {
					"type": "object",
					"properties": {
						"enabled": {
							"type": "boolean",
							"default": false,
							"description": "Whether to enable text body parsing"
						},
						"limit": {
							"type": "string",
							"default": "1mb",
							"description": "Size limit of request bodies"
						},
						"type": {
							"type": "string",
							"description": "Content-Type to parse",
							"default": "text/plain"
						}
					}
				}
			}
		},
		"security": {
			"type": "object",
			"description": "Security configuration",
			"properties": {
				"helmet": {
					"type": "object",
					"description": "Helmet middleware configuration",
					"properties": {
						"enabled": {
							"type": "boolean",
							"default": true,
							"description": "Whether to enable helmet"
						},
						"contentSecurityPolicy": {
							"oneOf": [
								{
									"type": "boolean"
								},
								{
									"type": "object",
									"additionalProperties": true
								}
							],
							"description": "Content Security Policy options"
						},
						"xssFilter": {
							"type": "boolean",
							"default": true,
							"description": "X-XSS-Protection header"
						},
						"hsts": {
							"oneOf": [
								{
									"type": "boolean"
								},
								{
									"type": "object",
									"additionalProperties": true
								}
							],
							"description": "HTTP Strict Transport Security options"
						}
					}
				},
				"cors": {
					"type": "boolean",
					"default": true,
					"description": "Whether to enable CORS (uses CORS config section)"
				},
				"rateLimit": {
					"type": "boolean",
					"default": false,
					"description": "Whether to enable rate limiting (uses rateLimiting config section)"
				}
			}
		},
		"endpoints": {
			"type": "array",
			"description": "Custom API endpoint definitions",
			"items": {
				"type": "object",
				"required": [
					"path",
					"method",
					"implementation"
				],
				"properties": {
					"path": {
						"type": "string",
						"description": "Endpoint path"
					},
					"method": {
						"type": "string",
						"enum": [
							"GET",
							"POST",
							"PUT",
							"DELETE",
							"PATCH",
							"OPTIONS",
							"HEAD"
						],
						"description": "HTTP method"
					},
					"description": {
						"type": "string",
						"description": "Endpoint description"
					},
					"tags": {
						"type": "array",
						"items": {
							"type": "string"
						},
						"description": "Tags for documentation"
					},
					"auth": {
						"oneOf": [
							{
								"type": "boolean"
							},
							{
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						],
						"description": "Authentication requirements or allowed roles"
					},
					"implementation": {
						"type": "string",
						"description": "Endpoint implementation function or file path"
					},
					"middleware": {
						"type": "array",
						"items": {
							"type": "string"
						},
						"description": "Middleware to apply to this endpoint"
					},
					"requestSchema": {
						"type": "object",
						"description": "Request validation schema",
						"properties": {
							"body": {
								"type": "object",
								"additionalProperties": true
							},
							"query": {
								"type": "object",
								"additionalProperties": true
							},
							"params": {
								"type": "object",
								"additionalProperties": true
							},
							"headers": {
								"type": "object",
								"additionalProperties": true
							}
						}
					},
					"responseSchema": {
						"type": "object",
						"description": "Response validation schema",
						"additionalProperties": true
					},
					"cache": {
						"type": "object",
						"properties": {
							"enabled": {
								"type": "boolean",
								"description": "Whether to enable caching"
							},
							"ttl": {
								"type": "integer",
								"description": "Time to live in seconds"
							},
							"key": {
								"type": "string",
								"description": "Cache key generator function (req) => string"
							}
						}
					},
					"rateLimiting": {
						"type": "object",
						"description": "Endpoint-specific rate limiting",
						"properties": {
							"windowMs": {
								"type": "integer"
							},
							"max": {
								"type": "integer"
							},
							"message": {
								"type": "string"
							}
						}
					},
					"errorHandling": {
						"type": "object",
						"description": "Endpoint-specific error handling",
						"properties": {
							"handler": {
								"type": "string",
								"description": "Error handler function or file path"
							}
						}
					}
				}
			}
		},
		"middleware": {
			"type": "array",
			"description": "Global middleware",
			"items": {
				"oneOf": [
					{
						"type": "string"
					},
					{
						"type": "object",
						"required": [
							"name",
							"implementation"
						],
						"properties": {
							"name": {
								"type": "string",
								"description": "Middleware name"
							},
							"implementation": {
								"type": "string",
								"description": "Middleware implementation function or file path"
							},
							"options": {
								"type": "object",
								"description": "Middleware options",
								"additionalProperties": true
							},
							"priority": {
								"type": "integer",
								"description": "Middleware execution priority (lower numbers run first)"
							},
							"enabled": {
								"type": "boolean",
								"default": true,
								"description": "Whether the middleware is enabled"
							},
							"path": {
								"type": "string",
								"description": "Path pattern to apply middleware to"
							},
							"excludePath": {
								"oneOf": [
									{
										"type": "string"
									},
									{
										"type": "array",
										"items": {
											"type": "string"
										}
									}
								],
								"description": "Path pattern(s) to exclude middleware from"
							}
						}
					}
				]
			}
		},
		"errorHandlers": {
			"type": "array",
			"description": "Error handler middleware",
			"items": {
				"type": "object",
				"required": [
					"implementation"
				],
				"properties": {
					"name": {
						"type": "string",
						"description": "Error handler name"
					},
					"implementation": {
						"type": "string",
						"description": "Error handler implementation function or file path"
					},
					"errorTypes": {
						"type": "array",
						"items": {
							"type": "string"
						},
						"description": "Error types this handler handles"
					},
					"priority": {
						"type": "integer",
						"description": "Handler execution priority (lower numbers run first)"
					}
				}
			}
		},
		"requestProcessor": {
			"type": "object",
			"description": "Request processor configuration",
			"properties": {
				"parseBody": {
					"type": "boolean",
					"default": true,
					"description": "Whether to parse request bodies"
				},
				"validate": {
					"type": "boolean",
					"default": true,
					"description": "Whether to validate requests"
				},
				"authenticate": {
					"type": "boolean",
					"default": true,
					"description": "Whether to authenticate requests"
				},
				"authorize": {
					"type": "boolean",
					"default": true,
					"description": "Whether to authorize requests"
				},
				"defaultMiddleware": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"description": "Default middleware to apply to all requests"
				}
			}
		},
		"documentation": {
			"type": "object",
			"description": "API documentation configuration",
			"properties": {
				"enabled": {
					"type": "boolean",
					"default": true,
					"description": "Whether to enable API documentation"
				},
				"path": {
					"type": "string",
					"default": "/docs",
					"description": "Path to documentation UI"
				},
				"title": {
					"type": "string",
					"description": "Documentation title"
				},
				"description": {
					"type": "string",
					"description": "API description"
				},
				"version": {
					"type": "string",
					"description": "API version"
				},
				"contact": {
					"type": "object",
					"properties": {
						"name": {
							"type": "string"
						},
						"url": {
							"type": "string"
						},
						"email": {
							"type": "string"
						}
					}
				},
				"license": {
					"type": "object",
					"properties": {
						"name": {
							"type": "string"
						},
						"url": {
							"type": "string"
						}
					}
				},
				"externalDocs": {
					"type": "object",
					"properties": {
						"description": {
							"type": "string"
						},
						"url": {
							"type": "string"
						}
					}
				},
				"servers": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"url": {
								"type": "string"
							},
							"description": {
								"type": "string"
							}
						}
					}
				},
				"tags": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string"
							},
							"description": {
								"type": "string"
							}
						}
					}
				},
				"auth": {
					"type": "object",
					"description": "Authentication documentation",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"bearer",
								"basic",
								"apiKey",
								"oauth2"
							],
							"description": "Auth type"
						},
						"description": {
							"type": "string",
							"description": "Auth description"
						},
						"scheme": {
							"type": "string",
							"description": "Auth scheme"
						},
						"bearerFormat": {
							"type": "string",
							"description": "Bearer token format"
						},
						"flows": {
							"type": "object",
							"description": "OAuth2 flows",
							"additionalProperties": true
						}
					}
				},
				"securitySchemes": {
					"type": "object",
					"description": "Security schemes",
					"additionalProperties": {
						"type": "object",
						"description": "Security scheme",
						"additionalProperties": true
					}
				}
			}
		},
		"adapters": {
			"type": "object",
			"description": "API adapters configuration",
			"properties": {
				"default": {
					"type": "string",
					"description": "Default adapter to use"
				},
				"config": {
					"type": "object",
					"description": "Adapters configuration",
					"additionalProperties": {
						"type": "object",
						"required": [
							"type"
						],
						"properties": {
							"type": {
								"type": "string",
								"description": "Adapter type/name"
							},
							"enabled": {
								"type": "boolean",
								"description": "Whether the adapter is enabled"
							},
							"options": {
								"type": "object",
								"description": "Adapter-specific options",
								"additionalProperties": true
							},
							"outputDir": {
								"type": "string",
								"description": "Output directory for generated files"
							},
							"auth": {
								"type": "object",
								"properties": {
									"enabled": {
										"type": "boolean",
										"description": "Whether to include authentication in generated API"
									},
									"provider": {
										"type": "string",
										"description": "Authentication provider (jwt, oauth, etc.)"
									},
									"options": {
										"type": "object",
										"description": "Authentication options",
										"additionalProperties": true
									}
								}
							},
							"templateDir": {
								"type": "string",
								"description": "Custom templates location"
							}
						}
					}
				}
			}
		},
		"entities": {
			"type": "array",
			"description": "Entities exposed through the API",
			"items": {
				"type": "object",
				"required": [
					"entity"
				],
				"properties": {
					"entity": {
						"type": "string",
						"description": "Entity name"
					},
					"basePath": {
						"type": "string",
						"description": "Base path for this entity's endpoints"
					},
					"operations": {
						"type": "object",
						"properties": {
							"getAll": {
								"oneOf": [
									{
										"type": "boolean"
									},
									{
										"type": "object",
										"properties": {
											"enabled": {
												"type": "boolean"
											},
											"path": {
												"type": "string"
											},
											"auth": {
												"oneOf": [
													{
														"type": "boolean"
													},
													{
														"type": "array",
														"items": {
															"type": "string"
														}
													}
												]
											},
											"pagination": {
												"type": "object",
												"properties": {
													"enabled": {
														"type": "boolean"
													},
													"defaultLimit": {
														"type": "integer"
													},
													"maxLimit": {
														"type": "integer"
													}
												}
											},
											"filters": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"sort": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"fields": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"include": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"hooks": {
												"type": "object",
												"properties": {
													"before": {
														"type": "string"
													},
													"after": {
														"type": "string"
													}
												}
											}
										}
									}
								]
							},
							"getById": {
								"oneOf": [
									{
										"type": "boolean"
									},
									{
										"type": "object",
										"properties": {
											"enabled": {
												"type": "boolean"
											},
											"path": {
												"type": "string"
											},
											"auth": {
												"oneOf": [
													{
														"type": "boolean"
													},
													{
														"type": "array",
														"items": {
															"type": "string"
														}
													}
												]
											},
											"fields": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"include": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"hooks": {
												"type": "object",
												"properties": {
													"before": {
														"type": "string"
													},
													"after": {
														"type": "string"
													}
												}
											}
										}
									}
								]
							},
							"create": {
								"oneOf": [
									{
										"type": "boolean"
									},
									{
										"type": "object",
										"properties": {
											"enabled": {
												"type": "boolean"
											},
											"path": {
												"type": "string"
											},
											"auth": {
												"oneOf": [
													{
														"type": "boolean"
													},
													{
														"type": "array",
														"items": {
															"type": "string"
														}
													}
												]
											},
											"fields": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"hooks": {
												"type": "object",
												"properties": {
													"before": {
														"type": "string"
													},
													"after": {
														"type": "string"
													}
												}
											},
											"validation": {
												"type": "boolean",
												"description": "Whether to validate input"
											}
										}
									}
								]
							},
							"update": {
								"oneOf": [
									{
										"type": "boolean"
									},
									{
										"type": "object",
										"properties": {
											"enabled": {
												"type": "boolean"
											},
											"path": {
												"type": "string"
											},
											"auth": {
												"oneOf": [
													{
														"type": "boolean"
													},
													{
														"type": "array",
														"items": {
															"type": "string"
														}
													}
												]
											},
											"fields": {
												"type": "array",
												"items": {
													"type": "string"
												}
											},
											"hooks": {
												"type": "object",
												"properties": {
													"before": {
														"type": "string"
													},
													"after": {
														"type": "string"
													}
												}
											},
											"validation": {
												"type": "boolean",
												"description": "Whether to validate input"
											}
										}
									}
								]
							},
							"delete": {
								"oneOf": [
									{
										"type": "boolean"
									},
									{
										"type": "object",
										"properties": {
											"enabled": {
												"type": "boolean"
											},
											"path": {
												"type": "string"
											},
											"auth": {
												"oneOf": [
													{
														"type": "boolean"
													},
													{
														"type": "array",
														"items": {
															"type": "string"
														}
													}
												]
											},
											"hooks": {
												"type": "object",
												"properties": {
													"before": {
														"type": "string"
													},
													"after": {
														"type": "string"
													}
												}
											},
											"softDelete": {
												"type": "boolean",
												"description": "Whether to use soft delete if configured on entity"
											}
										}
									}
								]
							}
						}
					},
					"actions": {
						"type": "array",
						"items": {
							"type": "object",
							"required": [
								"name",
								"path",
								"method",
								"implementation"
							],
							"properties": {
								"name": {
									"type": "string",
									"description": "Action name"
								},
								"path": {
									"type": "string",
									"description": "Endpoint path"
								},
								"method": {
									"type": "string",
									"enum": [
										"GET",
										"POST",
										"PUT",
										"DELETE",
										"PATCH"
									],
									"description": "HTTP method"
								},
								"description": {
									"type": "string",
									"description": "Action description"
								},
								"auth": {
									"oneOf": [
										{
											"type": "boolean"
										},
										{
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									],
									"description": "Authentication requirements or allowed roles"
								},
								"implementation": {
									"type": "string",
									"description": "Action implementation function or file path"
								},
								"middleware": {
									"type": "array",
									"items": {
										"type": "string"
									},
									"description": "Middleware to apply to this action"
								},
								"parameters": {
									"type": "array",
									"items": {
										"type": "object",
										"required": [
											"name",
											"type"
										],
										"properties": {
											"name": {
												"type": "string",
												"description": "Parameter name"
											},
											"type": {
												"type": "string",
												"enum": [
													"string",
													"number",
													"boolean",
													"object",
													"array"
												],
												"description": "Parameter type"
											},
											"required": {
												"type": "boolean",
												"description": "Whether the parameter is required"
											},
											"description": {
												"type": "string",
												"description": "Parameter description"
											}
										}
									}
								},
								"returns": {
									"type": "object",
									"properties": {
										"type": {
											"type": "string",
											"enum": [
												"object",
												"array",
												"string",
												"number",
												"boolean",
												"void"
											],
											"description": "Return type"
										},
										"description": {
											"type": "string",
											"description": "Description of the return value"
										}
									}
								}
							}
						}
					},
					"middleware": {
						"type": "array",
						"items": {
							"type": "string"
						},
						"description": "Middleware to apply to all routes for this entity"
					},
					"routeRegistry": {
						"type": "boolean",
						"description": "Whether to register routes in the route registry",
						"default": true
					}
				}
			}
		},
		"routeRegistry": {
			"type": "object",
			"description": "Route registry configuration",
			"properties": {
				"enabled": {
					"type": "boolean",
					"default": true,
					"description": "Whether to use the route registry"
				},
				"generateDocs": {
					"type": "boolean",
					"default": true,
					"description": "Whether to generate OpenAPI documentation"
				},
				"cacheRoutes": {
					"type": "boolean",
					"default": true,
					"description": "Whether to cache routers"
				}
			}
		},
		"actionRegistry": {
			"type": "object",
			"description": "Action registry configuration",
			"properties": {
				"enabled": {
					"type": "boolean",
					"default": true,
					"description": "Whether to use the action registry"
				},
				"loadActionsFromEntities": {
					"type": "boolean",
					"default": true,
					"description": "Whether to load actions from entity configurations"
				},
				"defaultTimeout": {
					"type": "integer",
					"default": 30000,
					"description": "Default timeout for action execution in milliseconds"
				}
			}
		},
		"controllers": {
			"type": "object",
			"description": "Controller configuration",
			"properties": {
				"directory": {
					"type": "string",
					"description": "Directory containing controller files"
				},
				"useEntityControllers": {
					"type": "boolean",
					"default": true,
					"description": "Whether to use entity controllers"
				},
				"controllerGenerator": {
					"type": "object",
					"description": "Controller generator configuration",
					"properties": {
						"enabled": {
							"type": "boolean",
							"default": true,
							"description": "Whether to use the controller generator"
						},
						"templateDir": {
							"type": "string",
							"description": "Directory containing controller templates"
						}
					}
				}
			}
		},
		"context": {
			"type": "object",
			"description": "API context configuration",
			"properties": {
				"defaultData": {
					"type": "object",
					"description": "Default data to include in all contexts",
					"additionalProperties": true
				},
				"includeUser": {
					"type": "boolean",
					"default": true,
					"description": "Whether to include user in context"
				},
				"autoWireServices": {
					"type": "boolean",
					"default": true,
					"description": "Whether to automatically wire services"
				}
			}
		}
	}
}